name: CI

on:
  push:
    paths:
      - ".github/workflows/ci.yml"
      - "**.cs"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        dotnet-version: [6.0, 8.0]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        run: |
          dotnet restore
          dotnet workload restore
      
      - name: Build Solution
        run: dotnet build --configuration Release --no-restore

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        dotnet-version: [6.0, 8.0]
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Run
        run: |
          for proj in examples/*/*.csproj; do
            exe=$(basename "$proj" .csproj)
            dotnet run --project "$proj" --configuration Release
          done
          
  lint:
    name: Lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        dotnet-version: [6.0, 8.0]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dotnet-format
        run: |
          if ! dotnet tool list -g | grep -q dotnet-format; then
            dotnet tool install -g dotnet-format
          fi

      - name: Run Linter
        run: dotnet format --check